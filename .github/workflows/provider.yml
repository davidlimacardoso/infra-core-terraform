name: "Provider Validations"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

permissions:
  id-token: write
  contents: read

env:
  ROLE: ${{ secrets.AWS_ROLE }}
  # AWS_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.AWS_ROLE }}
  # AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:

  extract_provider_info:
    runs-on: ubuntu-latest
    outputs:
      provider: ${{ env.PROVIDER }}
      workdir: ${{ env.WORKDIR }}
      account: ${{ env.ACCOUNT }}
      account_name: ${{ env.ACCOUNT_NAME }}
      provider_credentials: ${{ env.PROVIDER_CREDENTIALS }}
    
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get modified files from GitHub API and generate work directory
        id: get-provider
        run: |
          BASE_REF="${{ github.base_ref }}"
          HEAD_REF="${{ github.head_ref }}"
          REPOSITORY="${{ github.repository }}"

          # GitHub API URL load diff between base and head commit
          API_URL="https://api.github.com/repos/${REPOSITORY}/compare/${BASE_REF}...${HEAD_REF}"

          # Load modified files
          response=$(curl -s $API_URL)

          # Filter files that start with 'infra/'
          files=$(echo "$response" | jq -r '.files[] | select(.filename | startswith("infra/")) | .filename')

          # Arrays to save Cloud Providers and modified accounts
          cloud_providers=()
          accounts=()

          # Analizys modified files
          for file in $files; do
            # Extract Cloud Provider and Accounts path
            cloud_provider=$(echo $file | cut -d'/' -f2)
            account=$(echo $file | cut -d'/' -f3)

            # Add the Cloud Provider and accounts inside arrays
            if [[ ! " ${cloud_providers[@]} " =~ " ${cloud_provider} " ]]; then
              cloud_providers+=("$cloud_provider")
            fi
            if [[ ! " ${accounts[@]} " =~ " ${account} " ]]; then
              accounts+=("$account")
            fi
          done

          # To check if are more Cloud Prroviders modified 
          if [ ${#cloud_providers[@]} -gt 1 ]; then
            echo "Please modify only one Cloud Provider at a time."
            exit 1
          fi

          # Check if there is more than one modified account within the Cloud Provider
          if [ ${#accounts[@]} -gt 1 ]; then
            echo "Please modify only one Account at a time."
            exit 1
          fi

          # Return the modified account path
          if [ ${#accounts[@]} -eq 1 ]; then
            echo "Modified account: infra/${cloud_providers[0]}/${accounts[0]}"
            FILE_PATH="infra/${cloud_providers[0]}/${accounts[0]}"
            echo "WORKDIR=$FILE_PATH" >> $GITHUB_ENV
            echo "ACCOUNT_NAME=${accounts[0]}" >> $GITHUB_ENV
            echo "PROVIDER=${cloud_providers[0]}" >> $GITHUB_ENV
          else
            echo "No modifications detected in infra/aws, infra/gcp, infra/oci etc..."
            exit 1
          fi

      - name: Load account informations
        id: account-id
        run: |
          ACCOUNT_ID="$(jq -r '.account_id' ./${{ env.WORKDIR }}/account_config.json)"
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      # If you have one more cloud providers, you need to set each then 
      - name: AWS Authentication
        if: ${{ env.PROVIDER }} == 'aws'
        id: aws-auth
        run: | 
          # Definindo o array de autenticação
          declare -A CREDENTIALS
          CREDENTIALS=(
            ["ROLE_ARN"]="arn:aws:iam::${{ env.ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE }}"
            ["REGION"]="${{ secrets.AWS_REGION }}"
          )
          echo "CREDENTIALS=$CREDENTIALS" >> $GITHUB_ENV

      
